{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAQnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHALlB,CAAC,iEAAoB,CAAC,MAAM,EAAE;gBACrC,iBAAiB,EAAE,SAAS;aAC/B,CAAC,CAAC,EACS,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;ACFjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,gFAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCiB;AAEF;AACT;AACQ;AAC2C;AACA;AACnC;AACO;AACU;;;AAmBzE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YALJ;YACP,yFAAkC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;YAC1D,iEAAgB;YAChB,iEAAS;SACV;mIAIU,SAAS,mBAflB,wDAAY;QACZ,2GAAsB;QACtB,2GAAsB;QACtB,wEAAc;QACd,+EAAoB;QACpB,yFAAa,mFAIb,iEAAgB;QAChB,iEAAS;;;;;;;;;;;;;;;;ACtBN,MAAM,IAAI;IACf,YAAoB,EAAU,EAAS,SAAoB;QAAvC,OAAE,GAAF,EAAE,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;CAChE;;;;;;;;;;;;;;;;;;;ACHiE;;;;AAQ3D,MAAM,sBAAsB;IASjC,YACU,QAAyB,EACzB,wBAAkD,EAClD,gBAAkC;QAFlC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAV5C,UAAK,GAAW,CAAC,CAAC;IAWlB,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,eAAe;QACb,uDAAuD;QACvD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,kBAAkB;QAChB,uDAAuD;QACvD,wBAAwB;IAC1B,CAAC;IAED,aAAa;QACX,OAAO,CAAC,GAAG,CAAC,aAAa,GAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/C,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;QAEtE,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAExG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE3B,kDAAkD;QAClD,+BAA+B;QAE/B,gFAAgF;QAEhF,mDAAmD;QAEnD,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACvD,4BAA4B;QAE5B,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAM,gBAAgB,CAAC,CAAC;QAE7E,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;IAClD,CAAC;;4FAhDU,sBAAsB;oHAAtB,sBAAsB;kEAItB,0EAAa;;;;;QCb1B,yEAAuD;QACnD,oEAAmB;QACvB,4DAAM;;;;;;;;;;;;;;;;;;;ACGC,MAAM,aAAa;IAExB,YAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;;0EAF/C,aAAa;2GAAb,aAAa;;;;;;;;;;;;;;;;;;ACJyB;;AAK5C,MAAM,qBAAqB;IAShC;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,GAAG,IAAI,iDAAe,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE;IACpE,CAAC;IAED,aAAa,CAAC,OAAe;QAC3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,cAAc;QACZ,IAAI,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;QAC3D,IAAG,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,EAAC;YACtC,oBAAoB;YACpB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACpD;aACG;YACF,kDAAkD;YAClD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;SACjD;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;QAC3D,IAAG,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,aAAa,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,EAAC;YAChE,oBAAoB;YACpB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACpD;aACG;YACF,kDAAkD;YAClD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;SACjD;IACH,CAAC;;0FA7CU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;ACHiD;AAC5B;;AAKlC,MAAM,eAAe;IAI1B;QACE,IAAI,CAAC,IAAI,GAAG;YACV,IAAI,iDAAI,CAAE,aAAa,EAAE,+EAAc,CAAC;YACxC,IAAI,iDAAI,CAAE,cAAc,EAAE,+EAAc,CAAC;SAC1C;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;;8EAjBU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;IEJhB,sEAA+C;IAC3C,mFACqB;IACzB,4DAAM;;;IAFkB,0DAAkB;IAAlB,uFAAkB;IAAC,gFAAkB;;ADU1D,MAAM,sBAAsB;IAKjC,YACU,cAAqC,EACrC,QAAyB;QADzB,mBAAc,GAAd,cAAc,CAAuB;QACrC,aAAQ,GAAR,QAAQ,CAAiB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,wBAAwB;QACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IACzB,CAAC;;4FAhBU,sBAAsB;oHAAtB,sBAAsB;QCZnC,yEAA2C;QACvC,kHAGM;QAEN,mFACqB;QAczB,4DAAM;;QApBoB,0DAAU;QAAV,8EAAU;QAKZ,0DAA8B;QAA9B,oGAA8B;QAAC,6FAA8B;;;;;;;;;;;;;;;;;;;ACLrB;;AASzD,MAAM,oBAAoB;IAHjC;QAKE,iBAAiB;QACjB,MAAM;QACN,kCAAkC;QAClC,MAAM;QACN,IAAI;QAEJ,WAAM,GAAO;YACX,wEAAc;SACf;KAgBF;IAdC,SAAS,CAAC,KAAa;QAErB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAc,EAAC,EAAE;YAChD,IAAG,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK;gBACtD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAG,IAAI,EAAE;YACN,OAAO,IAAI,CAAC;SACd;QACD,MAAM,IAAI,KAAK,CAAC,8BAA8B,KAAK,iBAAiB,CAAC,CAAC;QAEtE,6BAA6B;IAC/B,CAAC;;wFAxBU,oBAAoB;wIAApB,oBAAoB;;;;;;;;;;;;;;;;;;;;ACD1B,MAAM,cAAc;IAEzB,YAAoB,cAAqC;QAArC,mBAAc,GAAd,cAAc,CAAuB;IAAI,CAAC;IAE9D,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;IACvC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;IAC3C,CAAC;;4EAbU,cAAc;4GAAd,cAAc;QCT3B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;;;;;;;;;;;;;;;;ACArB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cardComponents/card-component.ts","./src/app/cardComponents/card-container/card-container.component.ts","./src/app/cardComponents/card-container/card-container.component.html","./src/app/cardComponents/card-directives/card.directive.ts","./src/app/cardComponents/card-services/deck-controller.service.ts","./src/app/cardComponents/card-services/deck-data.service.ts","./src/app/cardComponents/deck-container/deck-container.component.ts","./src/app/cardComponents/deck-container/deck-container.component.html","./src/app/pipes/dynamic-component.pipe.ts","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calendar-app-ui';\n}\n","<app-deck-container></app-deck-container>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DeckContainerComponent } from './cardComponents/deck-container/deck-container.component';\nimport { CardContainerComponent } from './cardComponents/card-container/card-container.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { DynamicComponentPipe } from './pipes/dynamic-component.pipe';\nimport { CardDirective } from './cardComponents/card-directives/card.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DeckContainerComponent,\n    CardContainerComponent,\n    LoginComponent,\n    DynamicComponentPipe,\n    CardDirective\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Type } from '@angular/core';\n\nexport class Card {\n  constructor( public id: string, public component: Type<any>) {}\n}","import { AfterViewChecked, AfterViewInit, Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { CardDirective } from '../card-directives/card.directive';\nimport { DeckDataService } from '../card-services/deck-data.service';\n\n@Component({\n  selector: 'app-card-container',\n  templateUrl: './card-container.component.html',\n  styleUrls: ['./card-container.component.scss']\n})\nexport class CardContainerComponent implements OnInit, AfterViewChecked, AfterViewInit {\n\n  index: number = 0;\n\n  @ViewChild(CardDirective, {static: true}) appCard!: CardDirective;\n\n  @Input('componentIndex')\n  componentIndex: number;\n\n  constructor(\n    private deckData: DeckDataService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef) {\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    // viewChild is set after the view has been initialized\n    this.loadComponent();\n  }\n\n  ngAfterViewChecked() {\n    // viewChild is updated after the view has been checked\n    // this.loadComponent();\n  }\n\n  loadComponent() {\n    console.log(\"Loading I: \"+this.componentIndex);\n    const componentItem = this.deckData.getDeckDataAt(this.componentIndex)\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentItem.component);\n\n    console.log(componentItem);\n\n    // const viewContainerRef = this.viewContainerRef;\n    // // viewContainerRef.clear();\n\n    // const componentRef = viewContainerRef.createComponent<any>(componentFactory);\n\n    // componentRef.instance.data = componentItem.data;\n\n    const viewContainerRef = this.appCard.viewContainerRef;\n    // viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent<any>(componentFactory);\n\n    componentRef.instance.data = componentItem.data;\n  }\n\n}\n","<div class=\"card shadow-sm p-3 mb-5 bg-white rounded\" >\n    <div appCard></div>\n</div>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appCard]'\n})\nexport class CardDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeckControllerService {\n\n  private currVisibleCardSubject: BehaviorSubject<number>;\n  private $currVisibleCard: Observable<number>;\n\n  //[0,1,2] => 3 cards in deck\n  //[0] => 1 card in deck\n  private sizeOfDeck: number;\n\n  constructor() {\n    this.sizeOfDeck = 1;\n    this.currVisibleCardSubject = new BehaviorSubject(1);\n    this.$currVisibleCard = this.currVisibleCardSubject.asObservable()\n  }\n\n  setSizeOfDeck(newSize: number): void{\n    this.sizeOfDeck = newSize;\n  }\n\n  currStateOfDeck(): Observable<number>{\n    return this.$currVisibleCard;\n  }\n\n  moveToNextCard(){\n    let currCardValue = this.currVisibleCardSubject.getValue();\n    if(currCardValue + 1 <= this.sizeOfDeck){\n      //next card is valid\n      this.currVisibleCardSubject.next(currCardValue + 1)\n    }\n    else{\n      //throw error that there is no next card available\n      console.log(\"Error! Next card is not available\")\n    }\n  }\n\n  moveToPreviousCard(){\n    let currCardValue = this.currVisibleCardSubject.getValue();\n    if(currCardValue - 1 >= 1 && currCardValue - 1 <= this.sizeOfDeck){\n      //next card is valid\n      this.currVisibleCardSubject.next(currCardValue - 1)\n    }\n    else{\n      //throw error that there is no next card available\n      console.log(\"Error! Next card is not available\")\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginComponent } from 'src/app/views/login/login.component';\nimport { Card } from '../card-component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeckDataService {\n\n  data: any;\n\n  constructor() {\n    this.data = [\n      new Card (\"login-state\", LoginComponent),\n      new Card (\"second-state\", LoginComponent)\n    ]\n  }\n\n  getDeckData(){\n    return this.data;\n  }\n\n  getDeckDataAt(index: number){\n    return this.data[index];\n  }\n}\n","import { Component, ComponentFactoryResolver, OnInit, ViewChild } from '@angular/core';\nimport { CardComponentInterface } from 'src/app/cardComponents/card-interfaces/card-component-interface';\nimport { DeckControllerService } from 'src/app/cardComponents/card-services/deck-controller.service';\nimport { LoginComponent } from 'src/app/views/login/login.component';\nimport { CardDirective } from '../card-directives/card.directive';\nimport { DeckDataService } from '../card-services/deck-data.service';\n\n@Component({\n  selector: 'app-deck-container',\n  templateUrl: './deck-container.component.html',\n  styleUrls: ['./deck-container.component.scss']\n})\nexport class DeckContainerComponent implements OnInit {\n\n  cards: any[];\n  selectedIndex: number;\n\n  constructor(\n    private deckController: DeckControllerService,\n    private deckData: DeckDataService) {\n      this.cards = this.deckData.getDeckData();\n      this.deckController.setSizeOfDeck(this.cards.length);\n      this.selectedIndex = 0;\n  }\n\n  ngOnInit(): void {\n    //initial index is first\n    this.selectedIndex = 0;\n  }\n\n}\n","<div class=\"deck-container-body col-sm-12\">\n    <div *ngFor=\"let card of cards; let i = index\">\n        <app-card-container class=\"card-{{i}}\" [componentIndex]=i>\n        </app-card-container>\n    </div>\n\n    <app-card-container class=\"card-{{selectedIndex}}\" [componentIndex]=selectedIndex>\n    </app-card-container>\n\n    <!-- <app-card-container class=\"card-0\">\n        <app-login></app-login>\n    </app-card-container>\n    <app-card-container class=\"card-1\">\n        <b>Calendar</b>\n    </app-card-container>\n    <app-card-container class=\"card-2\">\n        <b>To Do</b>\n    </app-card-container>\n    <app-card-container class=\"card-3\">\n        <b>About Us</b>\n    </app-card-container> -->\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LoginComponent } from '../views/login/login.component';\n\n//views that can be loaded dynamically\n// import * as views from './../views';\nimport * as comp from './../app.module';\n\n@Pipe({\n  name: 'dynamicComponent'\n})\nexport class DynamicComponentPipe implements PipeTransform {\n\n  // objMap: any = \n  //   {\n  //     \"app-login\": LoginComponent\n  //   }\n  // ;\n\n  objMap: any =[\n    LoginComponent\n  ]\n\n  transform(value: string): any {\n    \n    const view = this.objMap.filter((component: any)=>{\n      if(component['__annotations__'][0]['selector'] === value)\n        return component;\n    });\n    if(view) {\n       return view;\n    }\n    throw new Error(`A component with selector \"${value}\" was not found`);\n\n    // return this.objMap[value];\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CardComponentInterface } from 'src/app/cardComponents/card-interfaces/card-component-interface';\nimport { DeckControllerService } from 'src/app/cardComponents/card-services/deck-controller.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, CardComponentInterface {\n\n  constructor(private deckController: DeckControllerService) { }\n\n  ngOnInit(): void {\n  }\n\n  goToNextCard(){\n    this.deckController.moveToNextCard();\n  }\n\n  goToPreviousCard(){\n    this.deckController.moveToPreviousCard();\n  }\n\n}\n","<p>login works!!!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"names":[],"sourceRoot":"webpack:///"}